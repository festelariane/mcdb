@using Mercedes.Admin.Models.Configuration
@model EmailAccountModel
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
    <h4 class="modal-title">Email Account Information</h4>
</div>
<div class="modal-body">
    <div class="row">
        <div class="form-group">
            <label class="col-md-3 control-label">Email Address</label>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control"})
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-3 control-label">Display name</label>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.DisplayName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-3 control-label">Host</label>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.Host, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-3 control-label">Port</label>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.Port, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-3 control-label">User</label>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-3 control-label">Password</label>
            <div class="col-md-9">
                @Html.EditorFor(m => m.Password, new { @class = "form-control" })
                <div class="input-group-btn">
                    @if (Model.Id > 0)
                    {
                        <button type="button" name="changepassword" class="btn btn-info" onclick="submitEmailAccountForm(this)">
                            Change Password
                        </button>
                    }
                </div>

            </div>
        </div>
        <div class="form-group">
            <label class="col-md-3 control-label">SSL</label>
            <div class="col-md-9">
                @Html.CheckBoxFor(m => m.EnableSsl)
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-3 control-label">Use default credentials</label>
            <div class="col-md-9">
                @Html.CheckBoxFor(m => m.UseDefaultCredentials)
            </div>
        </div>
        @if (Model.Id > 0)
        {
            <div class="form-group">
                <label class="col-md-3 control-label">Test mail</label>
                <div class="col-md-9">
                    @Html.TextBoxFor(m => m.SendTestEmailTo, new { @class = "form-control" })
                    <div class="input-group-btn">
                        <button type="button" name="sendtestemail" class="btn btn-info" onclick="submitEmailAccountForm(this)">
                            Send Test Email
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<div class="modal-footer">
    <button type="button" data-dismiss="modal" class="btn btn-default" id="btn-Close">Close</button>
    <button type="button" name="save" class="btn btn-success" onclick="submitEmailAccountForm(this)" id="btn-update">Update</button>
</div>

<script type="text/javascript">
    function submitEmailAccountForm(source) {
        var frmEmailAccount = $("#emailaccount-form");
        var formData = frmEmailAccount.serialize();
        if (source != null)
        {
            var buttonName = $(source).attr('name');
            var param = {};
            param[buttonName] = $(source).attr('value');
            //formData = formData + '&' + $.param({ buttonName: $(source).attr('value') });
            formData = formData + '&' + $.param(param);
        }
        
        $("#btn-update").attr("disabled", "disabled");
        $.ajax({
            cache: false,
            type: "POST",
            url: frmEmailAccount.attr("action"),
            data: formData,
            success: function (data) {
                if (data) {
                    alert("Process request successfully");
                    resourceTable.ajax.reload();
                    //jQuery.noConflict();
                    $('#frm-edit-emailaccount').modal('toggle');
                } else {
                    alert("Cannot Process request information. Please check again!");
                }
                $("#btn-update").removeAttr("disabled");
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.responeText);
                $("#btn-update").removeAttr("disabled");
            }
        });
    }
</script>